{"version":3,"sources":["./src/app/employee/employee.component.ts","./src/app/employee/employee.component.html","./src/app/HMS services/admin.service.ts","./src/app/add-employee/add-employee.component.ts","./src/app/add-employee/add-employee.component.html","./src/environments/environment.ts","./src/app/payment/payment.component.ts","./src/app/payment/payment.component.html","./src/app/services/services.component.ts","./src/app/services/services.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/HMS services/employee-service.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/update-employee/update-employee.component.ts","./src/app/update-employee/update-employee.component.html","./src/app/model/employee.ts","./src/app/HMS services/customer-request.service.ts","./src/app/aboutus/aboutus.component.ts","./src/app/aboutus/aboutus.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { EmployeeServiceService } from '../HMS services/employee-service.service';\nimport { Employee } from '../model/employee';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css'],\n  providers: [EmployeeServiceService]\n})\nexport class EmployeeComponent implements OnInit {\n\n  employees : Employee[];\n\n  constructor(private employeeService: EmployeeServiceService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.employeeService.getEmployee().subscribe(result => {\n      this.employees = result;\n    }, error => {\n      console.log('error is ', error);\n    });\n  }\n\n\n  deleteEmployee(employeeid){\n    this.employeeService.deleteEmployeeById(employeeid).subscribe(result => {\n      alert(\"Employee Deleted Sucessfully\");\n      this.router.navigate(['/employee'])\n                    .then(() => {\n                      window.location.reload();\n                    });\n    }, error => {\n      console.log('error is ', error);\n    });\n\n  }\n}\n","<div class=\"jumbotron\">\n    <h3 class=\"text-center\">Employees</h3>\n    <br />\n    <table class=\"table table-hover\">\n      <thead>\n        <tr>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Phone</th>\n          <th>Email</th>\n          <th>Address</th>\n          <th></th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let list of employees\">\n  \n          <td> {{ list.first_name }}</td>\n          <td> {{ list.last_name }}</td>\n          <td> {{ list.phone }}</td>\n          <td> {{ list.email }}</td>\n          <td> {{ list.address }}</td>\n\n          <td><a routerLink=\"{{'/employee/' + list._id}}\">Update</a></td>\n          <td><button class=\"btn btn-primary\" (click) = \"deleteEmployee(list._id)\">Delete</button></td> \n          \n        </tr>\n      </tbody>\n    </table>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { User } from '../model/user';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class AdminService {\n\n  private url = 'http://localhost:3000';\n  \n  constructor(private http: HttpClient) {}\n\n  validateLogin(user: User){\n    return this.http.post(this.url + '/api/users',{\n      email : user.email,\n      password : user.password\n    }).pipe(\n        map(res => res),\n        catchError(error => throwError(error.message || error))\n    );\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { EmployeeServiceService } from '../HMS services/employee-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { Employee } from '../model/employee';\r\n\r\n@Component({\r\n  selector: 'app-add-employee',\r\n  templateUrl: './add-employee.component.html',\r\n  styleUrls: ['./add-employee.component.css'],\r\n  providers: [EmployeeServiceService]\r\n})\r\nexport class AddEmployeeComponent implements OnInit {\r\n\r\n  constructor( private employeeService: EmployeeServiceService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addEmployee(employeeData: Employee){\r\n    if(employeeData.first_name.trim() != \"\" && employeeData.last_name.trim() != \"\" && employeeData.phone.trim() != \"\" && employeeData.address.trim() != \"\" && employeeData.email.trim() != \"\") {\r\n      this.employeeService.addEmployee(employeeData).subscribe((result: any) => {\r\n        if(result.message){\r\n          alert(result.message);\r\n        }else{\r\n          alert(\"Employee Added successfully\");\r\n          this.router.navigateByUrl('/employee');\r\n        }\r\n      \r\n    }, error => {\r\n      console.log('error is ', error);\r\n      alert(error.message);\r\n    });\r\n  } else {\r\n      alert('Incomplete Data');        \r\n  }\r\n  }\r\n}\r\n","\r\n<section id=\"form\">\r\n    <div class=\"employee form\">\r\n        <h3 class=\"text-center\">Add an employee</h3>\r\n        <br/>\r\n        <form #addEmployeeForm=\"ngForm\">\r\n            <div class=\"employee-form-group\">\r\n                <label>First Name:</label>\r\n                <input type=\"text\" placeholder=\"ex: John\" #fnameRef=\"ngModel\" class=\"form-control\" name=\"first_name\" ngModel required />\r\n                <div *ngIf=\"fnameRef.errors && (fnameRef.dirty || fnameRef.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!fnameRef.errors.required\">\r\n                        Please enter First Name.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"employee-form-group\">\r\n                <label>Last Name:</label>\r\n                <input type=\"text\" placeholder=\"ex: Wick\" #lnameRef=\"ngModel\" class=\"form-control\" name=\"last_name\" ngModel required />\r\n                <div *ngIf=\"lnameRef.errors && (lnameRef.dirty || lnameRef.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!lnameRef.errors.required\">\r\n                        Please enter Last Name.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"employee-form-group\">\r\n                <label>Email:</label>\r\n                <input type=\"email\" placeholder=\"ex: john@gmail.com\" #emailRef=\"ngModel\" class=\"form-control\" name=\"email\"\r\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" ngModel required />\r\n                <div *ngIf=\"emailRef.errors && (emailRef.dirty || emailRef.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!emailRef.errors.pattern\">\r\n                        Please enter a valid email.\r\n                    </div>\r\n                    <div [hidden]=\"!emailRef.errors.required\">\r\n                        Please enter email.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"employee-form-group\">\r\n                <label>Phone:</label>\r\n                <input type=\"tel\" #phoneRef=\"ngModel\" class=\"form-control\" name=\"phone\" placeholder=\"XXXXXXXXXX\"\r\n                    maxlength=\"10\" minlength=\"10\" ngModel required />\r\n                <div *ngIf=\"phoneRef.errors && (phoneRef.dirty || phoneRef.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!phoneRef.errors.required\">\r\n                        Please enter Phone number.\r\n                    </div>\r\n                    <div [hidden]=\"!phoneRef.errors.minlength\">\r\n                        Please enter a valid Phone number.\r\n                    </div>\r\n                    <div [hidden]=\"!phoneRef.errors.maxlength\">\r\n                        Please enter a valid Phone number.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"employee-form-group\">\r\n                <label>Address:</label>\r\n                <input type=\"text\" placeholder=\"enter an address\" #addressRef=\"ngModel\" class=\"form-control\" name=\"address\" ngModel required />\r\n                <div *ngIf=\"addressRef.errors && (addressRef.dirty || addressRef.touched)\"\r\n                    class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!addressRef.errors.required\">\r\n                        Please enter address.\r\n                    </div>\r\n                </div><br>\r\n                <button [disabled]=\"!addEmployeeForm.form.valid\" type=\"submit\" class=\"btn btn-primary\"\r\n                    (click)=\"addEmployee(addEmployeeForm.value)\">ADD</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</section>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.css']\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n\r\n\r\n@ViewChild('paypalRef',{static: true}) private paypalRef: ElementRef;\r\n  ngOnInit(): void {\r\n    window.paypal.Buttons(\r\n      {\r\n        style: {\r\n          layout: 'horizontal',\r\n          color: 'blue',\r\n          shape: 'rect',\r\n          lable: 'paypal'\r\n          },\r\n        createOrder: (data, actions) =>{\r\n          return actions.order.create({\r\n            purchase_units: [\r\n              {\r\n                amount: {\r\n                  value: '1000',\r\n                  currency_code: 'USD'\r\n                }\r\n              }\r\n            ]\r\n          });\r\n        },\r\n        onApprove : (data, actions) =>{\r\n          return actions.order.capture().then(details =>{\r\n            alert('Transaction complete');\r\n          });\r\n        },\r\n        onError : error =>{\r\n          console.log(error);\r\n        }\r\n      })\r\n      .render(this.paypalRef.nativeElement);\r\n\r\n    }\r\n  }\r\n\r\n\r\n","<div #paypalRef></div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerRequestService } from '../HMS services/customer-request.service';\r\nimport { Request } from './../model/request';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-services',\r\n  templateUrl: './services.component.html',\r\n  styleUrls: ['./services.component.css'],\r\n  providers: [ CustomerRequestService ]\r\n})\r\nexport class ServicesComponent implements OnInit {\r\n\r\n  public request: Request\r\n\r\n  constructor(private requestService: CustomerRequestService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  customerData(request) {\r\n    if(request.customer_info.first_name && request.customer_info.last_name && request.customer_info.email && request.customer_info.phone && request.customer_info.address && request.service_date && (request.snow_removal || request.grass_cutting || request.indoor_cleaning)) {\r\n      var selectedDate = new Date(request.service_date);\r\n      var today = new Date();\r\n      if(selectedDate < today){\r\n        alert(\"Date can't be in past.\");\r\n        return;\r\n      }else{\r\n        request.service_date.toString();\r\n        this.requestService.customerRequest(request).subscribe(result => {\r\n          alert('Request generated successfully');\r\n      }, error => {\r\n        console.log('error is ', error);\r\n        alert(\"Server error Please try again\");\r\n      });\r\n      }      \r\n    } else {\r\n        alert('Invalid form entries');        \r\n    }\r\n    this.router.navigateByUrl('/payment');\r\n  }\r\n}\r\n","<body>\r\n   <section id=\"company\">\r\n    <div class =\"container\">\r\n      <img id=\"homeimg\" title=\"Snow Removal Service\" src=\"../../assets/img/tractor.jpg\" alt=\"Snow Removal Service\">\r\n    </div>\r\n </section>\r\n <section id=\"tools\">\r\n  <div id=\"features\">\r\n    <h3>When we are prepared to perform snow expulsion administrations</h3>\r\n    <h4>Equipments we use to provide best services</h4>\r\n    <div class =\" row\">\r\n      <div class = \"col-md-4\" title=\"Garant Poly Sleigh Shovel\">\r\n        <img src=\"../../assets/img/snow shoval.jpg\" alt=\"Garant Poly Sleigh Shovel\">\r\n        <p>Garant Poly Sleigh Shovel</p>\r\n      </div>\r\n      <div class = \"col-md-4\" title=\"Vertex Heavy Duty Rolling\">\r\n        <img src=\"../../assets/img/vertex.jpg\" alt=\"Vertex Heavy Duty Rolling\">\r\n        <p>Vertex Heavy Duty Rolling</p>\r\n      </div>\r\n      <div class = \"col-md-4\" title=\"Cordless Power Snow Shovel\">\r\n        <img src=\"../../assets/img/Toroman.jpg\" alt=\"Cordless Power Snow Shovel\">\r\n        <p>Cordless Power Snow Shovel</p>\r\n      </div>\r\n    </div>\r\n    <div class =\" row\">\r\n      <div class = \"col-md-4\" title=\"Snow Mover & Ice Scraper\">\r\n        <img src=\"../../assets/img/Snowrator-Single-Path.jpg\" alt=\"Snow Mover & Ice Scraper\">\r\n        <p>Snow Mover & Ice Scraper</p>\r\n      </div>\r\n      <div class = \"col-md-4\" title=\"WORX Wheelbarrow Snow Plow\">\r\n        <img src=\"../../assets/img/WORX.jpg\" alt=\"WORX Wheelbarrow Snow Plow\">\r\n        <p>WORX Wheelbarrow Snow Plow</p>\r\n      </div>\r\n      <div class = \"col-md-4\" title=\"Snow Joe Cordless Power Snow Shovel\">\r\n        <img src=\"../../assets/img/snow joe.jpg\" alt=\"Snow Joe Cordless Power Snow Shovel\">\r\n        <p>Snow Joe Cordless Power Snow Shovel</p>\r\n      </div>\r\n      </div>\r\n  </div>\r\n</section>\r\n<section id =\"Maintenance\">\r\n  <h3>Garden Maintenance for Homeowners</h3>\r\n  <h5>HM administration, we generally put our clients first by giving broad choices to grass and nursery support. From turf care to pruning and occasional tidy up, we can deal with it just for you. </h5>\r\n    <div class =\" row\">\r\n      <div class = \"col-md-4\" title=\"Natural Lawn Care\">\r\n        <img src=\"../../assets/img/hybrid.jpeg\" alt=\"Natural Lawn Care\">\r\n        <p>Natural Lawn Care — For those that lean toward eco-accommodating grass care.</p>\r\n      </div>\r\n      <div class = \"col-md-4\" title=\"Hybrid Lawn Care\">\r\n        <img src=\"../../assets/img/lawn care.jpg\" alt=\"Hybrid Lawn Care\">\r\n        <p>Hybrid Lawn Care — As a blend of our natural and conventional items.</p>\r\n      </div>\r\n      <div class = \"col-md-4\" title=\"Simple Lawn Care\">\r\n        <img src=\"../../assets/img/simple.jpg\" alt=\"Simple Lawn Care\">\r\n        <p>Simple Lawn Care — using basic synthetic medicines.</p>\r\n      </div>\r\n  </div>\r\n</section>\r\n<section id =\"team\">  \r\n  <h3>Our Team</h3>\r\n    <div class =\"row\">\r\n      <div class = \"col-md-4\" title=\"Catherine Moore - Organizer\">\r\n        <img src=\"../../assets/img/team 3.jpg\" alt=\"Catherine Moore - Organizer\">\r\n        <p>Catherine Moore - Organizer</p>\r\n      </div>\r\n      <div class = \"col-md-4\" title=\"Colin Shannon - Manager\">\r\n        <img src=\"../../assets/img/Team-memeber-13.png\" alt=\"Colin Shannon - Manager\">\r\n        <p>Colin Shannon - Manager</p>        \r\n      </div>\r\n      <div class = \"col-md-4\" title=\"Dembe Ritz - Supervisor\">\r\n        <img src=\"../../assets/img/Team-memeber-9.png\" alt=\"Dembe Ritz - Supervisor\">\r\n        <p>Dembe Ritz - Supervisor</p>\r\n      </div>\r\n    </div>\r\n</section>   \r\n<section id = \"form\">  \r\n  <div class=\"service form\">\r\n    <h2 class=\"text-center\">Request a service</h2>\r\n    <form #requestForm =\"ngForm\"> <!-- #service request Form is the reference variable -->\r\n      <div ngModelGroup=\"customer_info\">\r\n\t\t  <div class=\"service-form-group\">\r\n\t\t    <label>Email:</label>\r\n\t\t    <input type=\"email\" placeholder=\"ex: john@gmail.com\" #emailRef=\"ngModel\" class=\"form-control\" name=\"email\"  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" ngModel required/>\r\n\t\t    <div *ngIf=\"emailRef.errors && (emailRef.dirty || emailRef.touched)\" class=\"alert alert-danger\">\r\n\t\t\t  <div [hidden]=\"!emailRef.errors.pattern\">\r\n\t\t\t    Please enter a valid email.\r\n      </div>\r\n      <div [hidden]=\"!emailRef.errors.required\">\r\n        Please enter your email.\r\n    </div> \r\n    </div> \r\n  </div>\r\n  <div class=\"service-form-group\">\r\n    <label>First Name:</label>\r\n    <input type=\"text\" placeholder=\"ex: John\" #fnameRef=\"ngModel\" class=\"form-control\" name=\"first_name\" ngModel required/>\r\n      <div *ngIf=\"fnameRef.errors && (fnameRef.dirty || fnameRef.touched)\" class=\"alert alert-danger\">\r\n        <div [hidden]=\"!fnameRef.errors.required\">\r\n\t\t\t    Please enter your First Name.\r\n\t\t\t</div>\r\n    </div> \r\n  </div>\r\n  <div class=\"service-form-group\">\r\n    <label>Last Name:</label>\r\n    <input type=\"text\" placeholder=\"ex: Wick\" #lnameRef=\"ngModel\" class=\"form-control\" name=\"last_name\" ngModel required/>\r\n      <div *ngIf=\"lnameRef.errors && (lnameRef.dirty || lnameRef.touched)\" class=\"alert alert-danger\">\r\n        <div [hidden]=\"!lnameRef.errors.required\">\r\n\t\t\t    Please enter your Last Name.\r\n\t\t\t</div>\r\n    </div> \r\n  </div>\r\n  <div class=\"service-form-group\">\r\n    <label>Phone:</label>\r\n    <input type=\"tel\" #phoneRef=\"ngModel\" class=\"form-control\" name=\"phone\" placeholder=\"XXXXXXXXXX\" maxlength=\"10\" minlength=\"10\" ngModel required/>\r\n      <div *ngIf=\"phoneRef.errors && (phoneRef.dirty || phoneRef.touched)\" class=\"alert alert-danger\">\r\n        <div [hidden]=\"!phoneRef.errors.required\">\r\n\t\t\t    Please enter your Phone number.\r\n          </div>\r\n          <div [hidden]=\"!phoneRef.errors.minlength\">\r\n            Please enter a valid Phone number.\r\n        </div>\r\n        <div [hidden]=\"!phoneRef.errors.maxlength\">\r\n          Please enter a valid Phone number.\r\n      </div>\r\n    </div> \r\n  </div>\r\n  <div class=\"service-form-group\">\r\n    <label>Address:</label>\r\n    <input type=\"text\" #addressRef=\"ngModel\" placeholder=\"enter your address\" class=\"form-control\" name=\"address\" ngModel required/>\r\n      <div *ngIf=\"addressRef.errors && (addressRef.dirty || addressRef.touched)\" class=\"alert alert-danger\">\r\n        <div [hidden]=\"!addressRef.errors.required\">\r\n\t\t\t    Please enter your address.\r\n\t\t\t</div>\r\n    </div> \r\n  </div>\r\n      </div>\r\n  <div class=\"service-form-group\">\r\n    <label>Service Date:</label>\r\n    <input type=\"text\" #serviceDateRef=\"ngModel\" class=\"form-control\" placeholder=\"YYYY-MM-DD\" name=\"service_date\" pattern=\"([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))\" ngModel required/>\r\n      <div *ngIf=\"serviceDateRef.errors && (serviceDateRef.dirty || serviceDateRef.touched)\" class=\"alert alert-danger\">\r\n        <div [hidden]=\"!serviceDateRef.errors.required\">\r\n\t\t\t    Please enter Service Date.\r\n      </div>\r\n      <div [hidden]=\"!serviceDateRef.errors.pattern\">\r\n        Please enter a valid Date.\r\n    </div>\r\n    </div> \r\n  </div>\r\n  <div class=\"service-form-group custom-checkbox \">\r\n    <label>Service Type:</label><br>\r\n    <input type=\"checkbox\" #snowRef=\"ngModel\"  id=\"snow\" name=\"snow_removal\" checked=\"true\" ngModel />\r\n    <div *ngIf=\"snowRef.errors && (snowRef.dirty || snowRef.touched)\" class=\"alert alert-danger\"></div>\r\n    <label for=\"defaultCheck\">&nbsp; Snow Removal</label>\r\n    <br>\r\n    <input type=\"checkbox\" #backyardRef=\"ngModel\"  id=\"backyard\" name=\"grass_cutting\" ngModel />\r\n    <div *ngIf=\"backyardRef.errors && (backyardRef.dirty || backyardRef.touched)\" class=\"alert alert-danger\"></div>\r\n    <label for=\"defaultCheck\">&nbsp; Grass Cutting </label>\r\n    <br>\r\n    <input type=\"checkbox\" #gardenRef=\"ngModel\"  id=\"garden\" name=\"indoor_cleaning\" ngModel />\r\n    <div *ngIf=\"gardenRef.errors && (gardenRef.dirty || gardenRef.touched)\" class=\"alert alert-danger\"></div>\r\n    <label for=\"defaultCheck\"> &nbsp; Indoor cleaning </label>\r\n    <br>\r\n  </div>\r\n        \r\n\t\t<button [disabled]=\"!requestForm.form.valid\" type=\"submit\" (click)=\"customerData(requestForm.value)\">Submit</button>\r\n\t  </form> \r\n</div>\r\n</section>  \r\n</body>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerRequestService } from '../HMS services/customer-request.service';\r\nimport { Request } from '../model/request';\r\nimport { Employee } from '../model/employee';\r\nimport { EmployeeServiceService } from '../HMS services/employee-service.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css'],\r\n  providers: [CustomerRequestService, EmployeeServiceService]\r\n\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  employeeAssigned;\r\n  serviceRequests: Request [];\r\n  employees: Employee [];\r\n  editMode: string;\r\n\r\n  constructor(\r\n\r\n    private customerRequestService: CustomerRequestService, \r\n    private employyeReq: EmployeeServiceService\r\n    \r\n    ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.employyeReq.getEmployee().subscribe(result => {\r\n      this.employees = result;\r\n    }, error => {\r\n      console.log('error is ', error);\r\n    });\r\n\r\n    this.customerRequestService.getCustomerServiceRequests().subscribe(result => {\r\n      this.serviceRequests = result;\r\n    }, error => {\r\n      console.log('error is ', error);\r\n    });\r\n  }\r\n\r\n  onChange(employeeName) {\r\n    this.employeeAssigned = employeeName;\r\n  }\r\n\r\n  assignEmployee(service: Request){\r\n    this.editMode = '';\r\n    if(service != null){\r\n      service.employee_assigned = this.employeeAssigned;\r\n      this.customerRequestService.assignEmployee(service).subscribe((result: any) => {\r\n        alert(\"Employee assigned successfully\");\r\n      }, error => {\r\n        console.log('error is ', error);\r\n        alert(error.message);\r\n      });\r\n    } else {\r\n        alert('Invalid selection');        \r\n    }\r\n\r\n  }\r\n\r\n  editAssignEmployee(service: Request){\r\n    this.editMode = service._id;\r\n  }\r\n}\r\n","<div class=\"jumbotron\">\r\n    <h3 class=\"text-center\">Service requests</h3>\r\n    <br />\r\n    <table class=\"table table-hover\">\r\n      <thead>\r\n        <tr>\r\n          <th>Customer Name</th>\r\n          <th>Address</th>\r\n          <th>Phone</th>\r\n          <th>Email</th>\r\n          <th>Snow Removal</th>\r\n          <th>Grass Cutting</th>\r\n          <th>Indoor Cleaning</th>\r\n          <th>Service Date</th>\r\n          <th>Service Status</th>\r\n          <th>Employee Assigned</th>\r\n          <th>Assign</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let list of serviceRequests\">\r\n          <td hidden=\"true\"> {{list._id}}</td>\r\n          <td> {{ list.customer_info.first_name }} {{list.customer_info.last_name}}</td>\r\n          <td> {{ list.customer_info.address }}</td>\r\n          <td> {{ list.customer_info.phone }}</td>\r\n          <td> {{ list.customer_info.email }}</td>\r\n          <td> {{ list.snow_removal }}</td>\r\n          <td> {{ list.grass_cutting }}</td>\r\n          <td> {{ list.indoor_cleaning }}</td>\r\n          <td> {{ list.service_date }}</td>\r\n          <td> {{ list.service_status }}</td>\r\n          <td> \r\n            <div *ngIf=\"list.employee_assigned\">{{ list.employee_assigned }}</div>\r\n            <div *ngIf=\"!list.employee_assigned || (editMode === list._id)\">\r\n              <select name=\"employees\" (change)=\"onChange($event.target.value)\">\r\n\r\n                <option>Select an Employee</option>\r\n                <option *ngFor=\"let em of employees\" value=\"{{em.first_name}}\">{{em.first_name}} {{em.last_name}}</option>\r\n                \r\n              </select>\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <button title=\"Assign Employee\" *ngIf=\"list.employee_assigned === '' || (editMode === list._id)\" class=\"btn btn-primary\" (click) =\"assignEmployee(list)\" input type=\"submit\" [ngValue]=\"submit\">ASSIGN</button> &nbsp;\r\n            <button title=\"Change Employee Assigned\" *ngIf=\"list.employee_assigned !== ''  && (editMode !== list._id)\" class=\"btn btn-primary\" (click) =\"editAssignEmployee(list)\" input type=\"submit\" [ngValue]=\"submit\">EDIT</button>\r\n          </td>      \r\n  \r\n        </tr>\r\n      </tbody>\r\n    </table>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'hm-services';\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"col-md-12\">\r\n    <app-header></app-header>\r\n    <router-outlet></router-outlet>\r\n    <app-footer></app-footer>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { RouterModule} from '@angular/router';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ServicesComponent } from './services/services.component';\r\nimport { AboutusComponent } from './aboutus/aboutus.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { EmployeeComponent } from './employee/employee.component';\r\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\r\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\r\nimport { PaymentComponent } from './payment/payment.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    ServicesComponent,\r\n    AboutusComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    EmployeeComponent,\r\n    AddEmployeeComponent,\r\n    UpdateEmployeeComponent,\r\n    PaymentComponent,\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      {\r\n        path: '',component: ServicesComponent\r\n      },\r\n      {\r\n      path: 'aboutus',component: AboutusComponent\r\n      },\r\n      {\r\n        path: 'login',component: LoginComponent\r\n      },\r\n      {\r\n         path: 'addEmployee',component: AddEmployeeComponent \r\n      },\r\n      {\r\n         path: 'employee/:employeeId',component: UpdateEmployeeComponent\r\n      },\r\n      {\r\n        path: 'employee',component: EmployeeComponent,\r\n      },\r\n      {\r\n        path: 'dashboard',component: DashboardComponent,\r\n      },\r\n      {\r\n        path: 'payment', component: PaymentComponent\r\n      }\r\n    ])\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Employee } from '../model/employee';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map, retry } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeServiceService {\r\n\r\n  private url = 'http://localhost:3000';\r\n  \r\n  constructor(private http: HttpClient) {}\r\n\r\n  getEmployee(){\r\n    return this.http.get(this.url + '/api/employee')\r\n    .pipe(\r\n      map((data: Employee[]) => {\r\n        return data;\r\n      }), catchError( error => {\r\n        return throwError( 'Something went wrong!' );\r\n      })\r\n   )\r\n  }\r\n\r\n\r\n  getEmployeeById(employeeId: String)  {\r\n    return this.http.get(this.url + '/api/employee/' + employeeId)\r\n         .pipe(\r\n          map((data: Employee) => {\r\n            return data;\r\n          }), catchError( error => {\r\n            return throwError( 'Something went wrong!' );\r\n          })\r\n        )\r\n  }\r\n\r\n  updateEmployee(employeeId: String, employee: Employee) {\r\n    return this.http.put(this.url + '/api/employee/' + employeeId, {\r\n      email : employee.email,\r\n      phone : employee.phone,\r\n      first_name: employee.first_name,\r\n      last_name: employee.last_name,\r\n      address: employee.address\r\n    }).pipe(\r\n        map(res => res),\r\n        catchError(error => throwError(error.message || error))\r\n    );\r\n  }\r\n\r\n  addEmployee(employee: Employee) {\r\n    return this.http.post(this.url + '/api/employee', {\r\n      email : employee.email,\r\n      phone : employee.phone,\r\n      first_name: employee.first_name,\r\n      last_name: employee.last_name,\r\n      address: employee.address\r\n    }).pipe(\r\n        map(res => res),\r\n        catchError(error => throwError(error.message || error))\r\n    );\r\n  }\r\n\r\n  deleteEmployeeById(employeeId: String)  {\r\n    return this.http.delete(this.url + '/api/employee/' + employeeId)\r\n         .pipe(\r\n          map((data: Employee) => {\r\n            return data;\r\n          }), catchError( error => {\r\n            return throwError( 'Something went wrong!' );\r\n          })\r\n        )\r\n  }\r\n \r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  admin = false;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(localStorage.getItem(\"isUserLogin\") == \"true\"){\r\n      this.admin = true;\r\n    }else{\r\n      this.admin = false;\r\n    }\r\n  }\r\n\r\n  logoutAdmin(){\r\n    localStorage.clear();\r\n    this.router.navigate(['/'])\r\n                    .then(() => {\r\n                      window.location.reload();\r\n                    });\r\n  }\r\n  \r\n}\r\n","<header>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\" title=\"HM-Services\"> <img class=\"logo\" src=\"../../assets/img/new logo.png\" alt=\"HM-Services\"></div>\r\n        <div class=\"col-md-6\">\r\n            <nav class=\"navbar navbar-expand-md \">\r\n                  <ul class=\"navbar-nav\">   \r\n                    <li class=\"nav-item\" *ngIf=\"admin\">\r\n                      <a class=\"nav-link\" routerLink=\"dashboard\">Service Requests</a>\r\n                    </li> \r\n                    <li class=\"nav-item\" *ngIf=\"admin\">\r\n                      <a class=\"nav-link\" routerLink=\"employee\">Employee</a>\r\n                    </li>\r\n                    <li class=\"nav-item\" *ngIf=\"admin\">\r\n                      <a class=\"nav-link\" routerLink=\"addEmployee\">Add Employee</a>\r\n                    </li>                              \r\n                    <li class=\"nav-item\" *ngIf=\"!admin\">\r\n                      <a class=\"nav-link\" routerLink=\"\">Services</a>\r\n                    </li>\r\n                    <li class=\"nav-item\" *ngIf=\"!admin\">\r\n                      <a class=\"nav-link\" routerLink=\"aboutus\">About Us</a>\r\n                    </li>\r\n                  </ul>\r\n              </nav>\r\n        </div>\r\n        <div class=\"col-md-3\" *ngIf=\"!admin\"> \r\n            <button routerLink=\"login\">Login As Admin</button>\r\n        </div>\r\n        <div class=\"col-md-3\" *ngIf=\"admin\"> \r\n          <button (click)=\"logoutAdmin()\">Logout</button>\r\n      </div>\r\n    </div>\r\n</header>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n\r\n<!-- Footer -->\r\n<footer class=\"page-footer font-small blue pt-4\">\r\n\r\n  <!-- Footer Links -->\r\n  <div class=\"container-fluid text-center text-md-left\">\r\n\r\n    <!-- Grid row -->\r\n    <div class=\"row\">\r\n\r\n      <!-- Grid column -->\r\n      <div class=\"col-md-6 mt-md-0 mt-3\">\r\n\r\n        <!-- Content -->\r\n        <h3 class=\"text-uppercase\">HMS</h3>\r\n        <p>Home Management Services</p>\r\n\r\n      </div>\r\n      <!-- Grid column -->\r\n\r\n      <hr class=\"clearfix w-100 d-md-none pb-3\">\r\n\r\n      <!-- Grid column -->\r\n      <div class=\"col-md-2 col-lg-2 col-xl-2 mx-auto mb-4\">\r\n\r\n          <!-- Links -->\r\n          <h6 class=\"text-uppercase font-weight-bold\"> &nbsp;Services</h6>\r\n          <hr class=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style=\"width: 60px;\">\r\n          <ul>\r\n            <li>Grass Cutting</li>\r\n            <li>Snow Removal</li>\r\n            <li>Indoor Cleaning</li>\r\n          </ul>\r\n  \r\n        </div>\r\n      <!-- Grid column -->\r\n\r\n      <!-- Grid column -->\r\n      <div class=\"col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4\">\r\n\r\n          <!-- Links -->\r\n          <h6 class=\"text-uppercase font-weight-bold\">Contact Us</h6>\r\n          <hr class=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style=\"width: 60px;\">\r\n          <p><b>Address: </b>331 King Street West, <br/>\r\n            Waterloo, ON , CAN <br/>\r\n            <b>Email: </b> info@example.com <br/>\r\n            <b>Phone: </b> + 01 234 567 8887 <br/>\r\n            + 01 234 567 8879\r\n          </p> \r\n  \r\n        </div>\r\n      <!-- Grid column -->\r\n\r\n    </div>\r\n    <!-- Grid row -->\r\n\r\n  </div>\r\n  <!-- Footer Links -->\r\n  <hr />\r\n  <!-- Copyright -->\r\n  <div _ngcontent-ybp-c103=\"\" class=\"footer-copyright text-center\" >\r\n    © 2020 Copyright: HM-SERVICES \r\n  </div>\r\n  <!-- Copyright -->\r\n\r\n</footer>\r\n<!-- Footer -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EmployeeServiceService } from '../HMS services/employee-service.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Employee } from '../model/employee';\r\n\r\n\r\n@Component({\r\n  selector: 'app-update-employee',\r\n  templateUrl: './update-employee.component.html',\r\n  styleUrls: ['./update-employee.component.css'],\r\n  providers: [EmployeeServiceService]\r\n})\r\nexport class UpdateEmployeeComponent implements OnInit {\r\n\r\n  empId: string;\r\n  employee = new Employee(\"\",\"\",\"\",\"\",\"\",\"\");\r\n\r\n  private url = 'http://localhost:3000';\r\n\r\n  constructor(\r\n    private employeeService: EmployeeServiceService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n      ) { }\r\n\r\n  ngOnInit() {\r\n       \r\n     this.empId = this.route.snapshot.paramMap.get(\"employeeId\");\r\n\r\n     //pre-populate form based on employeeId\r\n     if(this.empId){\r\n       this.employeeService.getEmployeeById(this.empId).subscribe(result => {\r\n         this.employee = result;\r\n       }, error => {\r\n        console.log('error is ', error);\r\n      });\r\n     }\r\n  }\r\n\r\n  updateEmployee(updatedEmployee){\r\n      if(updatedEmployee.first_name.trim() != \"\" && updatedEmployee.last_name.trim() != \"\" && updatedEmployee.phone.trim() != \"\" && updatedEmployee.address.trim() != \"\" && updatedEmployee.email.trim() != \"\") {\r\n        this.employeeService.updateEmployee(this.empId, updatedEmployee).subscribe((result: any) => {\r\n        alert(\"Employee updated successfully\");\r\n        this.router.navigateByUrl('/employee');\r\n      }, error => {\r\n        console.log('error is ', error);\r\n        alert(error.message);\r\n      });\r\n    } else {\r\n        alert('Incomplete Data');        \r\n    }\r\n  }\r\n\r\n  }\r\n\r\n\r\n \r\n\r\n","\r\n<section id=\"form\">\r\n    <div class=\"employee form\">\r\n        <h2 class=\"text-center\">Update an employee</h2>\r\n        <br />\r\n        <form #updateInfo=\"ngForm\">\r\n            <div class=\"employee-form-group\">\r\n                <label>First Name:</label>\r\n                <input type=\"text\" #fnameRef=\"ngModel\" class=\"form-control\" name=\"first_name\" [(ngModel)]=\"employee.first_name\" required />\r\n                <div *ngIf=\"fnameRef.errors && (fnameRef.dirty || fnameRef.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!fnameRef.errors.required\">\r\n                        Please enter First Name.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"employee-form-group\">\r\n                <label>Last Name:</label>\r\n                <input type=\"text\" #lnameRef=\"ngModel\" class=\"form-control\" name=\"last_name\" [(ngModel)]=\"employee.last_name\" required />\r\n                <div *ngIf=\"lnameRef.errors && (lnameRef.dirty || lnameRef.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!lnameRef.errors.required\">\r\n                        Please enter Last Name.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"service-form-group\">\r\n                <label>Email:</label>\r\n                <input type=\"email\" #emailRef=\"ngModel\" class=\"form-control\" name=\"email\"\r\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" [(ngModel)]=\"employee.email\" required />\r\n                <div *ngIf=\"emailRef.errors && (emailRef.dirty || emailRef.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!emailRef.errors.pattern\">\r\n                        Please enter a valid email.\r\n                    </div>\r\n                    <div [hidden]=\"!emailRef.errors.required\">\r\n                        Please enter email.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"employee-form-group\">\r\n                <label>Phone:</label>\r\n                <input type=\"tel\" #phoneRef=\"ngModel\" class=\"form-control\" name=\"phone\" placeholder=\"XXXXXXXXXX\"\r\n                    maxlength=\"10\" minlength=\"10\" [(ngModel)]=\"employee.phone\" required />\r\n                <div *ngIf=\"phoneRef.errors && (phoneRef.dirty || phoneRef.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!phoneRef.errors.required\">\r\n                        Please enter Phone number.\r\n                    </div>\r\n                    <div [hidden]=\"!phoneRef.errors.minlength\">\r\n                        Please enter a valid Phone number.\r\n                    </div>\r\n                    <div [hidden]=\"!phoneRef.errors.maxlength\">\r\n                        Please enter a valid Phone number.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"employee-form-group\">\r\n                <label>Address:</label>\r\n                <input type=\"text\" #addressRef=\"ngModel\" class=\"form-control\" name=\"address\" [(ngModel)]=\"employee.address\" required />\r\n                <div *ngIf=\"addressRef.errors && (addressRef.dirty || addressRef.touched)\"\r\n                    class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!addressRef.errors.required\">\r\n                        Please enter address.\r\n                    </div>\r\n                </div><br>\r\n                <button type=\"submit\" class=\"btn btn-primary\"\r\n                    (click)=\"updateEmployee(updateInfo.value)\">Update</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</section>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nexport class Employee {\r\n\r\n    constructor(\r\n        public _id: string,\r\n        public first_name: string,\r\n        public last_name: string,\r\n        public email: string,\r\n        public phone: string,\r\n        public address: string\r\n      ) {  }\r\n      \r\n}","import { Injectable } from '@angular/core';\r\nimport { Request } from '../model/request';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map, retry } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerRequestService {\r\n\r\n  private url = 'http://localhost:3000';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  customerRequest(request: Request){\r\n    return this.http.post(this.url + '/api/service_request',{\r\n      customer_info : {\r\n        first_name : request.customer_info.first_name,\r\n        last_name : request.customer_info.last_name,\r\n        email : request.customer_info.email,\r\n        phone : request.customer_info.phone,\r\n        address : request.customer_info.address,\r\n      },\r\n      snow_removal : request.snow_removal,\r\n      grass_cutting : request.grass_cutting,\r\n      indoor_cleaning : request.indoor_cleaning,\r\n      service_date: request.service_date        \r\n    }).pipe(\r\n        map(res => res),\r\n        catchError(error => throwError(error.message || error))\r\n    );\r\n  }\r\n\r\n  getCustomerServiceRequests(){\r\n    return this.http.get(this.url + '/api/service_request')\r\n    .pipe(\r\n      map((data: Request[]) => {\r\n        return data;\r\n      }), catchError( error => {\r\n        return throwError( 'Something went wrong!' );\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  assignEmployee(request: Request){\r\n    return this.http.put(this.url + '/api/service_request',{\r\n      customer_info : {\r\n        first_name : request.customer_info.first_name,\r\n        last_name : request.customer_info.last_name,\r\n        email : request.customer_info.email,\r\n        phone : request.customer_info.phone,\r\n        address : request.customer_info.address,\r\n      },\r\n      snow_removal : request.snow_removal,\r\n      grass_cutting : request.grass_cutting,\r\n      indoor_cleaning : request.indoor_cleaning,\r\n      service_date: request.service_date,\r\n      employee_assigned: request.employee_assigned,\r\n      service_status: request.service_status,\r\n      _id: request._id\r\n    }).pipe(\r\n        map(res => res),\r\n        catchError(error => throwError(error.message || error))\r\n    );    \r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-aboutus',\r\n  templateUrl: './aboutus.component.html',\r\n  styleUrls: ['./aboutus.component.css']\r\n})\r\nexport class AboutusComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n\r\n    <div class=\"about-section\">\r\n      <h1>About Us</h1>\r\n      <p>We offer services in snow removal and landscaping. we are a ceritifed company with professionals. <br>\r\n      we are here to make your lives better.</p>    \r\n    </div>\r\n    \r\n  </div>\r\n</div>\r\n<div>\r\n  <br/>\r\n  <h2 class=\"text-center\">OUR WORK</h2>&nbsp;&nbsp;\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-4\" title=\"Indoor Maintenance\">\r\n    <img src=\"https://homebnc.com/homeimg/2017/03/02-front-yard-landscaping-garden-ideas-homebnc.jpg\" alt=\"Indoor Maintenance\">\r\n  </div>\r\n  <div class=\"col-md-4\" title=\"Snow Removal\">\r\n    <img src=\"https://www.terrace.ca/sites/default/files/images/city-services/1y9a2178.jpg\" alt=\"Snow Removal\">\r\n  </div>\r\n  <div class=\"col-md-4\" title=\"Grass Cutting\">\r\n    <img src=\"https://bloximages.chicago2.vip.townnews.com/napavalleyregister.com/content/tncms/assets/v3/editorial/0/16/016d4e11-1a7e-5e2e-aee3-2779c8545728/5e4efb8bf1ef6.image.jpg?resize=1200%2C675\" alt=\"Grass Cutting\">\r\n  </div>\r\n</div>\r\n<div>\r\n  <br/>\r\n  <h2 class=\"text-center\">LOCATE US</h2>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"map-responsive col-md-12 text-center\"> \r\n      <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2896.4238159986153!2d-80.49755468509466!3d43.451748379128695!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x882bf4f4c724489f%3A0x4118aeb885b6f58!2s331%20King%20St%20W%2C%20Kitchener%2C%20ON%20N2G%201B8!5e0!3m2!1sen!2sca!4v1603439477537!5m2!1sen!2sca\"  width=\"600px\" height=\"400px\" frameborder=\"0\" style=\"border:40px\" allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\">\r\n      </iframe>  \r\n  </div>\r\n  \r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AdminService } from '../HMS services/admin.service';\r\nimport { User } from './../model/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  providers: [ AdminService ]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public user: User\r\n\r\n  constructor(private adminService: AdminService,  private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    if(localStorage.getItem('userid')){\r\n      localStorage.setItem('isUserLogin', \"true\");\r\n    }else{\r\n      localStorage.setItem('isUserLogin', \"false\");\r\n    }\r\n  }\r\n\r\n  userData(user) {\r\n    if(user.email && user.password) {\r\n        this.adminService.validateLogin(user).subscribe((result: any) => {\r\n        localStorage.setItem('userid', result._id);\r\n        //set to maintain user login\r\n        localStorage.setItem('isUserLogin', \"true\");\r\n        this.router.navigate(['/dashboard'])\r\n                    .then(() => {\r\n                      window.location.reload();\r\n                    });\r\n      }, error => {\r\n        console.log('error is ', error);\r\n        alert(\"Invalid Email/Password. Please try again.\");\r\n      });\r\n    } else {\r\n        alert('enter user name and password');        \r\n    }\r\n  }\r\n}\r\n","\r\n<div class=\"form\">\r\n\t<h1>ADMIN LOGIN</h1>\r\n\t<form #loginForm =\"ngForm\"> <!-- #loginForm is the reference variable -->\r\n\t\t<div class=\"form-group\">\r\n\t\t  <label>Email:</label>\r\n\t\t  <input type=\"email\" #emailRef=\"ngModel\" class=\"form-control\" name=\"email\"  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" ngModel required/>\r\n\t\t  <div *ngIf=\"emailRef.errors && (emailRef.dirty || emailRef.touched)\" class=\"alert alert-danger\">\r\n\t\t\t<div [hidden]=\"!emailRef.errors.pattern\">\r\n\t\t\t  Please enter a valid email.\r\n\t\t\t</div> \r\n\t\t\t<div [hidden]=\"!emailRef.errors.required\">\r\n\t\t\t  Please enter your email.\r\n\t\t\t</div>\r\n\t\t  </div> \r\n\t\t</div>\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label>Password:</label>\r\n\t\t\t<input type=\"password\" #passwordRef=\"ngModel\" class=\"form-control\" name=\"password\" ngModel required/>\r\n\t\t\t<div *ngIf=\"passwordRef.errors && (passwordRef.dirty || passwordRef.touched)\" class=\"alert alert-danger\">\r\n\t\t\t  <div [hidden]=\"!passwordRef.errors.required\">\r\n\t\t\t\tPlease enter your password\r\n\t\t\t  </div>\r\n\t\t\t</div> \r\n\t\t  </div>\r\n\t\t<button [disabled]=\"!loginForm.form.valid\" type=\"submit\" class=\"btn btn-primary\" (click)=\"userData(loginForm.value)\">Submit</button>\r\n\t  </form> \r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}